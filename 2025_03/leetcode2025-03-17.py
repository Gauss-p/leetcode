class Solution:
    def minSwaps(self, s: str) -> int:
        # 将s中所有已经匹配的中括号对全部去除，可以发现剩下的是]]]]...][...[[[[形式的字符串
        # 找规律，如果剩下的括号对数n为偶数，如]][[只需要交换一次(即交换第一个和最后一个)，]]]][[[[只需要交换两次(即交换第一个和最后一个，第三个和倒数第三个)，所以需要交换的次数为n//2.所以对于n为奇数的情况，我们可以先处理掉最中间的一对，交换一次，然后对于剩下的括号，其对数为偶数，只需要交换(n-1)//2次即可
        # 总结一下，对于完全无法匹配的括号，如果其对数为偶数，那么答案就是n//2，否则就是(n-1)//2+1
        # 公式可以直接合并为(n+1)//2
        sm = 0
        for c in s:
            if c == "[":
                sm += 1
            if c == "]" and sm>0:
                sm -= 1
        return (sm+1)//2

if __name__ == "__main__":
    sl = Solution()
    s = "][]["
    print(sl.minSwaps(s))
